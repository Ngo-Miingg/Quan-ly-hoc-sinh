// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Student_Management.Models;

#nullable disable

namespace Student_Management.Migrations
{
    [DbContext(typeof(QuanLyHocSinhContext))]
    [Migration("20250826195723_V1_InitialCreate")]
    partial class V1_InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Student_Management.Models.Diem", b =>
                {
                    b.Property<int>("MaDiemSo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaDiem");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDiemSo"));

                    b.Property<double?>("Diem15Phut")
                        .HasColumnType("float");

                    b.Property<double?>("Diem1Tiet")
                        .HasColumnType("float");

                    b.Property<double?>("DiemMieng")
                        .HasColumnType("float");

                    b.Property<double?>("DiemThi")
                        .HasColumnType("float");

                    b.Property<double?>("DiemTrungBinh")
                        .HasColumnType("float")
                        .HasColumnName("DiemTB");

                    b.Property<int>("MaHocKy")
                        .HasColumnType("int")
                        .HasColumnName("MaHK");

                    b.Property<int>("MaHocSinh")
                        .HasColumnType("int")
                        .HasColumnName("MaHS");

                    b.Property<int>("MaMonHoc")
                        .HasColumnType("int");

                    b.HasKey("MaDiemSo")
                        .HasName("PK_DiemSo");

                    b.HasIndex("MaHocKy");

                    b.HasIndex("MaHocSinh");

                    b.HasIndex("MaMonHoc");

                    b.ToTable("DIEM", (string)null);
                });

            modelBuilder.Entity("Student_Management.Models.GiaoVien", b =>
                {
                    b.Property<int>("MaGiaoVien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaGV");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaGiaoVien"));

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioiTinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaMonHoc")
                        .HasColumnType("int");

                    b.Property<int?>("MonHocMaMonHoc")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SDT");

                    b.HasKey("MaGiaoVien")
                        .HasName("PK_GiaoVien");

                    b.HasIndex("MonHocMaMonHoc");

                    b.ToTable("GIAOVIEN", (string)null);
                });

            modelBuilder.Entity("Student_Management.Models.HocKy", b =>
                {
                    b.Property<int>("MaHocKy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaHK");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHocKy"));

                    b.Property<int>("MaNamHoc")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenHocKy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TenHK");

                    b.HasKey("MaHocKy")
                        .HasName("PK_HocKy");

                    b.HasIndex("MaNamHoc");

                    b.ToTable("HOCKY", (string)null);
                });

            modelBuilder.Entity("Student_Management.Models.HocPhi", b =>
                {
                    b.Property<int>("MaHocPhi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaHP");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHocPhi"));

                    b.Property<int>("MaHocKy")
                        .HasColumnType("int")
                        .HasColumnName("MaHK");

                    b.Property<int>("MaHocSinh")
                        .HasColumnType("int")
                        .HasColumnName("MaHS");

                    b.Property<DateTime?>("NgayDong")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("SoTien")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaHocPhi")
                        .HasName("PK_HocPhi");

                    b.HasIndex("MaHocKy");

                    b.HasIndex("MaHocSinh");

                    b.ToTable("HOCPHI", (string)null);
                });

            modelBuilder.Entity("Student_Management.Models.HocSinh", b =>
                {
                    b.Property<int>("MaHocSinh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaHS");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHocSinh"));

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioiTinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaLopHoc")
                        .HasColumnType("int")
                        .HasColumnName("MaLop");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SDT");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaHocSinh")
                        .HasName("PK_HocSinh");

                    b.HasIndex("MaLopHoc");

                    b.ToTable("HOCSINH", (string)null);
                });

            modelBuilder.Entity("Student_Management.Models.LichHoc", b =>
                {
                    b.Property<int>("MaLichHoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLichHoc"));

                    b.Property<int>("MaGiaoVien")
                        .HasColumnType("int")
                        .HasColumnName("MaGV");

                    b.Property<int>("MaHocKy")
                        .HasColumnType("int")
                        .HasColumnName("MaHK");

                    b.Property<int>("MaLopHoc")
                        .HasColumnType("int")
                        .HasColumnName("MaLop");

                    b.Property<int>("MaMonHoc")
                        .HasColumnType("int");

                    b.Property<int>("MaPhongHoc")
                        .HasColumnType("int")
                        .HasColumnName("MaPhong");

                    b.Property<string>("ThuTrongTuan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TietHoc")
                        .HasColumnType("int");

                    b.HasKey("MaLichHoc")
                        .HasName("PK_LichHoc");

                    b.HasIndex("MaGiaoVien");

                    b.HasIndex("MaHocKy");

                    b.HasIndex("MaLopHoc");

                    b.HasIndex("MaMonHoc");

                    b.HasIndex("MaPhongHoc");

                    b.ToTable("LICHHOC", (string)null);
                });

            modelBuilder.Entity("Student_Management.Models.Lop", b =>
                {
                    b.Property<int>("MaLopHoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaLop");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLopHoc"));

                    b.Property<int?>("MaGiaoVienChuNhiem")
                        .HasColumnType("int")
                        .HasColumnName("MaGVCN");

                    b.Property<int>("MaNamHoc")
                        .HasColumnType("int");

                    b.Property<int?>("SiSo")
                        .HasColumnType("int");

                    b.Property<string>("TenLopHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TenLop");

                    b.HasKey("MaLopHoc")
                        .HasName("PK_LopHoc");

                    b.HasIndex("MaGiaoVienChuNhiem");

                    b.HasIndex("MaNamHoc");

                    b.ToTable("LOP", (string)null);
                });

            modelBuilder.Entity("Student_Management.Models.MonHoc", b =>
                {
                    b.Property<int>("MaMonHoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaMonHoc"));

                    b.Property<double?>("HeSo")
                        .HasColumnType("float");

                    b.Property<int?>("SoTiet")
                        .HasColumnType("int");

                    b.Property<string>("TenMonHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaMonHoc")
                        .HasName("PK_MonHoc");

                    b.ToTable("MONHOC", (string)null);
                });

            modelBuilder.Entity("Student_Management.Models.NamHoc", b =>
                {
                    b.Property<int>("MaNamHoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNamHoc"));

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenNamHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNamHoc")
                        .HasName("PK_NamHoc");

                    b.ToTable("NAMHOC", (string)null);
                });

            modelBuilder.Entity("Student_Management.Models.PhanCongGiangDay", b =>
                {
                    b.Property<int>("MaPhanCong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaPC");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhanCong"));

                    b.Property<int>("MaGiaoVien")
                        .HasColumnType("int")
                        .HasColumnName("MaGV");

                    b.Property<int>("MaHocKy")
                        .HasColumnType("int")
                        .HasColumnName("MaHK");

                    b.Property<int>("MaLopHoc")
                        .HasColumnType("int")
                        .HasColumnName("MaLop");

                    b.Property<int>("MaMonHoc")
                        .HasColumnType("int");

                    b.HasKey("MaPhanCong")
                        .HasName("PK_PhanCongGiangDay");

                    b.HasIndex("MaGiaoVien");

                    b.HasIndex("MaHocKy");

                    b.HasIndex("MaLopHoc");

                    b.HasIndex("MaMonHoc");

                    b.ToTable("PHANCONG_GIANGDAY", (string)null);
                });

            modelBuilder.Entity("Student_Management.Models.PhongHoc", b =>
                {
                    b.Property<int>("MaPhongHoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaPhong");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhongHoc"));

                    b.Property<int?>("SucChua")
                        .HasColumnType("int");

                    b.Property<string>("TenPhongHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TenPhong");

                    b.Property<string>("ViTri")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaPhongHoc")
                        .HasName("PK_PhongHoc");

                    b.ToTable("PHONGHOC", (string)null);
                });

            modelBuilder.Entity("Student_Management.Models.TaiKhoan", b =>
                {
                    b.Property<int>("MaTaiKhoan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaTK");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaTaiKhoan"));

                    b.Property<int?>("MaGiaoVien")
                        .HasColumnType("int")
                        .HasColumnName("MaGV");

                    b.Property<int?>("MaHocSinh")
                        .HasColumnType("int")
                        .HasColumnName("MaHS");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDangNhap")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VaiTro")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaTaiKhoan")
                        .HasName("PK_TaiKhoan");

                    b.HasIndex("MaGiaoVien");

                    b.HasIndex("MaHocSinh");

                    b.HasIndex("TenDangNhap")
                        .IsUnique();

                    b.ToTable("TAIKHOAN", (string)null);

                    b.HasData(
                        new
                        {
                            MaTaiKhoan = 1,
                            MatKhau = "$2a$11$1ol1RrfNofzgfWAg49Xw3elTKj6wXPIFbGZBk6UJHV8VYIpgd1ICq",
                            TenDangNhap = "admin",
                            VaiTro = "Admin"
                        });
                });

            modelBuilder.Entity("Student_Management.Models.Diem", b =>
                {
                    b.HasOne("Student_Management.Models.HocKy", "HocKy")
                        .WithMany("DiemSos")
                        .HasForeignKey("MaHocKy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_DiemSo_HocKy");

                    b.HasOne("Student_Management.Models.HocSinh", "HocSinh")
                        .WithMany("DiemSos")
                        .HasForeignKey("MaHocSinh")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_DiemSo_HocSinh");

                    b.HasOne("Student_Management.Models.MonHoc", "MonHoc")
                        .WithMany("DiemSos")
                        .HasForeignKey("MaMonHoc")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_DiemSo_MonHoc");

                    b.Navigation("HocKy");

                    b.Navigation("HocSinh");

                    b.Navigation("MonHoc");
                });

            modelBuilder.Entity("Student_Management.Models.GiaoVien", b =>
                {
                    b.HasOne("Student_Management.Models.MonHoc", "MonHoc")
                        .WithMany("GiaoViens")
                        .HasForeignKey("MonHocMaMonHoc");

                    b.Navigation("MonHoc");
                });

            modelBuilder.Entity("Student_Management.Models.HocKy", b =>
                {
                    b.HasOne("Student_Management.Models.NamHoc", "NamHoc")
                        .WithMany("HocKys")
                        .HasForeignKey("MaNamHoc")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_HocKy_NamHoc");

                    b.Navigation("NamHoc");
                });

            modelBuilder.Entity("Student_Management.Models.HocPhi", b =>
                {
                    b.HasOne("Student_Management.Models.HocKy", "HocKy")
                        .WithMany("HocPhis")
                        .HasForeignKey("MaHocKy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_HocPhi_HocKy");

                    b.HasOne("Student_Management.Models.HocSinh", "HocSinh")
                        .WithMany("HocPhis")
                        .HasForeignKey("MaHocSinh")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_HocPhi_HocSinh");

                    b.Navigation("HocKy");

                    b.Navigation("HocSinh");
                });

            modelBuilder.Entity("Student_Management.Models.HocSinh", b =>
                {
                    b.HasOne("Student_Management.Models.Lop", "LopHoc")
                        .WithMany("HocSinhs")
                        .HasForeignKey("MaLopHoc")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_HocSinh_LopHoc");

                    b.Navigation("LopHoc");
                });

            modelBuilder.Entity("Student_Management.Models.LichHoc", b =>
                {
                    b.HasOne("Student_Management.Models.GiaoVien", "GiaoVien")
                        .WithMany("LichHocs")
                        .HasForeignKey("MaGiaoVien")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_LichHoc_GiaoVien");

                    b.HasOne("Student_Management.Models.HocKy", "HocKy")
                        .WithMany("LichHocs")
                        .HasForeignKey("MaHocKy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_LichHoc_HocKy");

                    b.HasOne("Student_Management.Models.Lop", "LopHoc")
                        .WithMany("LichHocs")
                        .HasForeignKey("MaLopHoc")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_LichHoc_LopHoc");

                    b.HasOne("Student_Management.Models.MonHoc", "MonHoc")
                        .WithMany("LichHocs")
                        .HasForeignKey("MaMonHoc")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_LichHoc_MonHoc");

                    b.HasOne("Student_Management.Models.PhongHoc", "PhongHoc")
                        .WithMany("LichHocs")
                        .HasForeignKey("MaPhongHoc")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_LichHoc_PhongHoc");

                    b.Navigation("GiaoVien");

                    b.Navigation("HocKy");

                    b.Navigation("LopHoc");

                    b.Navigation("MonHoc");

                    b.Navigation("PhongHoc");
                });

            modelBuilder.Entity("Student_Management.Models.Lop", b =>
                {
                    b.HasOne("Student_Management.Models.GiaoVien", "GiaoVienChuNhiem")
                        .WithMany("LopHocs")
                        .HasForeignKey("MaGiaoVienChuNhiem")
                        .HasConstraintName("FK_LopHoc_GiaoVien");

                    b.HasOne("Student_Management.Models.NamHoc", "NamHoc")
                        .WithMany("LopHocs")
                        .HasForeignKey("MaNamHoc")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_LopHoc_NamHoc");

                    b.Navigation("GiaoVienChuNhiem");

                    b.Navigation("NamHoc");
                });

            modelBuilder.Entity("Student_Management.Models.PhanCongGiangDay", b =>
                {
                    b.HasOne("Student_Management.Models.GiaoVien", "GiaoVien")
                        .WithMany("PhanCongGiangDays")
                        .HasForeignKey("MaGiaoVien")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_PhanCong_GiaoVien");

                    b.HasOne("Student_Management.Models.HocKy", "HocKy")
                        .WithMany("PhanCongGiangDays")
                        .HasForeignKey("MaHocKy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_PhanCong_HocKy");

                    b.HasOne("Student_Management.Models.Lop", "LopHoc")
                        .WithMany("PhanCongGiangDays")
                        .HasForeignKey("MaLopHoc")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_PhanCong_LopHoc");

                    b.HasOne("Student_Management.Models.MonHoc", "MonHoc")
                        .WithMany("PhanCongGiangDays")
                        .HasForeignKey("MaMonHoc")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_PhanCong_MonHoc");

                    b.Navigation("GiaoVien");

                    b.Navigation("HocKy");

                    b.Navigation("LopHoc");

                    b.Navigation("MonHoc");
                });

            modelBuilder.Entity("Student_Management.Models.TaiKhoan", b =>
                {
                    b.HasOne("Student_Management.Models.GiaoVien", "GiaoVien")
                        .WithMany("TaiKhoans")
                        .HasForeignKey("MaGiaoVien")
                        .HasConstraintName("FK_TaiKhoan_GiaoVien");

                    b.HasOne("Student_Management.Models.HocSinh", "HocSinh")
                        .WithMany("TaiKhoans")
                        .HasForeignKey("MaHocSinh")
                        .HasConstraintName("FK_TaiKhoan_HocSinh");

                    b.Navigation("GiaoVien");

                    b.Navigation("HocSinh");
                });

            modelBuilder.Entity("Student_Management.Models.GiaoVien", b =>
                {
                    b.Navigation("LichHocs");

                    b.Navigation("LopHocs");

                    b.Navigation("PhanCongGiangDays");

                    b.Navigation("TaiKhoans");
                });

            modelBuilder.Entity("Student_Management.Models.HocKy", b =>
                {
                    b.Navigation("DiemSos");

                    b.Navigation("HocPhis");

                    b.Navigation("LichHocs");

                    b.Navigation("PhanCongGiangDays");
                });

            modelBuilder.Entity("Student_Management.Models.HocSinh", b =>
                {
                    b.Navigation("DiemSos");

                    b.Navigation("HocPhis");

                    b.Navigation("TaiKhoans");
                });

            modelBuilder.Entity("Student_Management.Models.Lop", b =>
                {
                    b.Navigation("HocSinhs");

                    b.Navigation("LichHocs");

                    b.Navigation("PhanCongGiangDays");
                });

            modelBuilder.Entity("Student_Management.Models.MonHoc", b =>
                {
                    b.Navigation("DiemSos");

                    b.Navigation("GiaoViens");

                    b.Navigation("LichHocs");

                    b.Navigation("PhanCongGiangDays");
                });

            modelBuilder.Entity("Student_Management.Models.NamHoc", b =>
                {
                    b.Navigation("HocKys");

                    b.Navigation("LopHocs");
                });

            modelBuilder.Entity("Student_Management.Models.PhongHoc", b =>
                {
                    b.Navigation("LichHocs");
                });
#pragma warning restore 612, 618
        }
    }
}
